#  Copyright (c) 2015-2018 Patrick Diehl
#
#  Distributed under the Boost Software License, Version 1.0. (See accompanying
#  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
version: 2

jobs:
    build:
      docker:
       - image: stellargroup/hpx:dev
      working_directory: /hpx/
      steps:
       - run:
         name: Export variables
         command: |
               echo 'export PATH=/usr/local/cuda-8.0/bin:$PATH' >> $BASH_ENV && \
               echo 'export LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/cuda-8.0/lib64' >> $BASH_ENV && \
               echo 'export PERL5LIB=.' >> $BASH_ENV && \
               echo 'export CUDA_LIB_PATH=/usr/local/cuda-8.0/lib64/stubs/' >> $BASH_ENV 
       - checkout
       - run:
           name: Install dependencies
           command: apt-get update && apt-get install -y xsltproc doxygen libpng-dev wget opencl-headers ocl-icd-opencl-dev
       - run: 
           name: Install cuda
           command: |
                wget https://developer.nvidia.com/compute/cuda/8.0/Prod2/local_installers/cuda_8.0.61_375.26_linux-run && \
                chmod +x cuda_8.0.61_375.26_linux-run && \
                mkdir nvidia_installers && \
                ./cuda_8.0.61_375.26_linux-run -extract=`pwd`/nvidia_installers && \
                cd nvidia_installers && \
                ./cuda-linux64-rel-8.0.61-21551265.run -noprompt && \
                cd .. && \
                rm -r nvidia_installers
       - run:
           name: Create build folder
           command: cd /hpx && mkdir -p build
       - run: 
           name: Configure
           command: cd /hpx/build && cmake .. -DCMAKE_BUILD_TYPE=Debug -DHPX_WITH_MALLOC=system -DCMAKE_CXX_FLAGS="-fcolor-diagnostics" -DHPXCL_WITH_OPENCL=On -DHPXCL_WITH_CUDA=On  -DHPXCL_WITH_BENCHMARK=On -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0
       - run: 
           name: Build
           command: cd /hpx/build make -j 2
       - save_cache:
           key: build-{{ .Branch }}-{{ .Revision }}
           paths:
              - "/hpx"
    
    test:
      docker:
       - image: stellargroup/hpx:dev
      working_directory: /hpx/build
      steps:
       - checkout
       - restore_cache:
          key:  build-{{ .Branch }}-{{ .Revision }}
       - run:
          name: Run tests
          command:  cd /hpx/build && ../tools/run_tests.sh
       
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
          filters:
            branches:
              ignore:
                 - gh-pages
